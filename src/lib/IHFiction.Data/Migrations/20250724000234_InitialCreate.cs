// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace IHFiction.Data.Migrations
{
    /// <inheritdoc />
    public partial class InitialCreate : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.EnsureSchema(
                name: "ihfiction.dev2");

            migrationBuilder.CreateTable(
                name: "tag",
                schema: "ihfiction.dev2",
                columns: table => new
                {
                    id = table.Column<string>(type: "character varying(26)", nullable: false),
                    category = table.Column<string>(type: "text", nullable: false),
                    subcategory = table.Column<string>(type: "text", nullable: true),
                    value = table.Column<string>(type: "text", nullable: false),
                    discriminator = table.Column<string>(type: "character varying(13)", maxLength: 13, nullable: false),
                    canonical_tag_id = table.Column<string>(type: "character varying(26)", nullable: true),
                    updated_at = table.Column<DateTime>(type: "timestamp with time zone", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_tag", x => x.id);
                    table.ForeignKey(
                        name: "fk_tag_tag_canonical_tag_id",
                        column: x => x.canonical_tag_id,
                        principalSchema: "ihfiction.dev2",
                        principalTable: "tag",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "users",
                schema: "ihfiction.dev2",
                columns: table => new
                {
                    id = table.Column<string>(type: "character varying(26)", nullable: false),
                    user_id = table.Column<Guid>(type: "uuid", nullable: false),
                    name = table.Column<string>(type: "text", nullable: false),
                    gravatar_email = table.Column<string>(type: "text", nullable: true),
                    deleted_at = table.Column<DateTime>(type: "timestamp with time zone", nullable: true),
                    discriminator = table.Column<string>(type: "character varying(8)", maxLength: 8, nullable: false),
                    profile_bio = table.Column<string>(type: "text", nullable: true),
                    updated_at = table.Column<DateTime>(type: "timestamp with time zone", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_users", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "work",
                schema: "ihfiction.dev2",
                columns: table => new
                {
                    id = table.Column<string>(type: "character varying(26)", nullable: false),
                    title = table.Column<string>(type: "text", nullable: false),
                    published_at = table.Column<DateTime>(type: "timestamp with time zone", nullable: true),
                    deleted_at = table.Column<DateTime>(type: "timestamp with time zone", nullable: true),
                    owner_id = table.Column<string>(type: "character varying(26)", nullable: false),
                    discriminator = table.Column<string>(type: "character varying(13)", maxLength: 13, nullable: false),
                    description = table.Column<string>(type: "text", nullable: true),
                    story_id = table.Column<string>(type: "character varying(26)", nullable: true),
                    work_body_id = table.Column<string>(type: "text", nullable: true),
                    book_id = table.Column<string>(type: "character varying(26)", nullable: true),
                    updated_at = table.Column<DateTime>(type: "timestamp with time zone", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_work", x => x.id);
                    table.ForeignKey(
                        name: "fk_work_authors_owner_id",
                        column: x => x.owner_id,
                        principalSchema: "ihfiction.dev2",
                        principalTable: "users",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "fk_work_stories_story_id",
                        column: x => x.story_id,
                        principalSchema: "ihfiction.dev2",
                        principalTable: "work",
                        principalColumn: "id",
                        onDelete: ReferentialAction.SetNull);
                    table.ForeignKey(
                        name: "fk_work_work_book_id",
                        column: x => x.book_id,
                        principalSchema: "ihfiction.dev2",
                        principalTable: "work",
                        principalColumn: "id",
                        onDelete: ReferentialAction.SetNull);
                });

            migrationBuilder.CreateTable(
                name: "anthology_story",
                schema: "ihfiction.dev2",
                columns: table => new
                {
                    anthologies_id = table.Column<string>(type: "character varying(26)", nullable: false),
                    stories_id = table.Column<string>(type: "character varying(26)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_anthology_story", x => new { x.anthologies_id, x.stories_id });
                    table.ForeignKey(
                        name: "fk_anthology_story_stories_stories_id",
                        column: x => x.stories_id,
                        principalSchema: "ihfiction.dev2",
                        principalTable: "work",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "fk_anthology_story_work_anthologies_id",
                        column: x => x.anthologies_id,
                        principalSchema: "ihfiction.dev2",
                        principalTable: "work",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "author_work",
                schema: "ihfiction.dev2",
                columns: table => new
                {
                    authors_id = table.Column<string>(type: "character varying(26)", nullable: false),
                    works_id = table.Column<string>(type: "character varying(26)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_author_work", x => new { x.authors_id, x.works_id });
                    table.ForeignKey(
                        name: "fk_author_work_authors_authors_id",
                        column: x => x.authors_id,
                        principalSchema: "ihfiction.dev2",
                        principalTable: "users",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "fk_author_work_work_works_id",
                        column: x => x.works_id,
                        principalSchema: "ihfiction.dev2",
                        principalTable: "work",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "tag_work",
                schema: "ihfiction.dev2",
                columns: table => new
                {
                    tags_id = table.Column<string>(type: "character varying(26)", nullable: false),
                    works_id = table.Column<string>(type: "character varying(26)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_tag_work", x => new { x.tags_id, x.works_id });
                    table.ForeignKey(
                        name: "fk_tag_work_tag_tags_id",
                        column: x => x.tags_id,
                        principalSchema: "ihfiction.dev2",
                        principalTable: "tag",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "fk_tag_work_work_works_id",
                        column: x => x.works_id,
                        principalSchema: "ihfiction.dev2",
                        principalTable: "work",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "ix_anthology_story_stories_id",
                schema: "ihfiction.dev2",
                table: "anthology_story",
                column: "stories_id");

            migrationBuilder.CreateIndex(
                name: "ix_author_work_works_id",
                schema: "ihfiction.dev2",
                table: "author_work",
                column: "works_id");

            migrationBuilder.CreateIndex(
                name: "ix_tag_canonical_tag_id",
                schema: "ihfiction.dev2",
                table: "tag",
                column: "canonical_tag_id");

            migrationBuilder.CreateIndex(
                name: "ix_tag_work_works_id",
                schema: "ihfiction.dev2",
                table: "tag_work",
                column: "works_id");

            migrationBuilder.CreateIndex(
                name: "ix_work_book_id",
                schema: "ihfiction.dev2",
                table: "work",
                column: "book_id");

            migrationBuilder.CreateIndex(
                name: "ix_work_owner_id",
                schema: "ihfiction.dev2",
                table: "work",
                column: "owner_id");

            migrationBuilder.CreateIndex(
                name: "ix_work_story_id",
                schema: "ihfiction.dev2",
                table: "work",
                column: "story_id");

            migrationBuilder.CreateIndex(
                name: "ix_work_title",
                schema: "ihfiction.dev2",
                table: "work",
                column: "title");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "anthology_story",
                schema: "ihfiction.dev2");

            migrationBuilder.DropTable(
                name: "author_work",
                schema: "ihfiction.dev2");

            migrationBuilder.DropTable(
                name: "tag_work",
                schema: "ihfiction.dev2");

            migrationBuilder.DropTable(
                name: "tag",
                schema: "ihfiction.dev2");

            migrationBuilder.DropTable(
                name: "work",
                schema: "ihfiction.dev2");

            migrationBuilder.DropTable(
                name: "users",
                schema: "ihfiction.dev2");
        }
    }
}
